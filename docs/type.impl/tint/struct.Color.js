(function() {var type_impls = {
"tint":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#54\">source</a><a href=\"#impl-Clone-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#54\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#65-241\">source</a><a href=\"#impl-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#73-75\">source</a><h4 class=\"code-header\">pub fn <a href=\"tint/struct.Color.html#tymethod.new\" class=\"fn\">new</a>(red: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, green: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, blue: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, alpha: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class=\"docblock\"><p>Create new color from components</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>tint::Color;\n<span class=\"kw\">let </span>red = Color::new(<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>);\n<span class=\"kw\">let </span>fushcia = Color::new(<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_rgb1\" class=\"method\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#86-88\">source</a><h4 class=\"code-header\">pub fn <a href=\"tint/struct.Color.html#tymethod.from_rgb1\" class=\"fn\">from_rgb1</a>(r: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, g: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class=\"docblock\"><p>Create new color from RGB components [0. .. 1.0],\nalpha value set to 1.0</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>blue = Color::from_rgb1(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_rgb1v\" class=\"method\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#96-98\">source</a><h4 class=\"code-header\">pub fn <a href=\"tint/struct.Color.html#tymethod.from_rgb1v\" class=\"fn\">from_rgb1v</a>(rgb: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>]) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class=\"docblock\"><p>Create new color from RGB f64 vector [0. .. 1.0],\nalpha value set to 1.0</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>green = Color::from_rgb1v(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_rgb1\" class=\"method\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#107-109\">source</a><h4 class=\"code-header\">pub fn <a href=\"tint/struct.Color.html#tymethod.to_rgb1\" class=\"fn\">to_rgb1</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class=\"docblock\"><p>Convert Color to (f64,f64,f64) </p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>purple = Color::new(<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>);\n<span class=\"kw\">let </span>rgb = purple.to_rgb1();\n<span class=\"macro\">assert_eq!</span>(rgb, (<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_rgb255\" class=\"method\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#120-124\">source</a><h4 class=\"code-header\">pub fn <a href=\"tint/struct.Color.html#tymethod.from_rgb255\" class=\"fn\">from_rgb255</a>(red: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>, green: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>, blue: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class=\"docblock\"><p>Create new Color from RGB [0 .. 255]\nalpha value set to 1.0</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>purple = Color::from_rgb255(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">255</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_rgb255v\" class=\"method\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#135-137\">source</a><h4 class=\"code-header\">pub fn <a href=\"tint/struct.Color.html#tymethod.from_rgb255v\" class=\"fn\">from_rgb255v</a>(rgb: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class=\"docblock\"><p>Create new Color from RGB u8 vector [0 .. 255]\nalpha value set to 1.0</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>purple = Color::from_rgb255v(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">255</span>]);\n<span class=\"macro\">assert_eq!</span>(purple.red,   <span class=\"number\">1.0</span>);\n<span class=\"macro\">assert_eq!</span>(purple.green, <span class=\"number\">0.0</span>);\n<span class=\"macro\">assert_eq!</span>(purple.blue,  <span class=\"number\">1.0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_rgb255\" class=\"method\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#145-150\">source</a><h4 class=\"code-header\">pub fn <a href=\"tint/struct.Color.html#tymethod.to_rgb255\" class=\"fn\">to_rgb255</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class=\"docblock\"><p>Convert color to (u8,u8,u8)</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>purple = Color::new(<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>);\n<span class=\"macro\">assert_eq!</span>(purple.to_rgb255(), (<span class=\"number\">255</span>,<span class=\"number\">0</span>,<span class=\"number\">255</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#160-166\">source</a><h4 class=\"code-header\">pub fn <a href=\"tint/struct.Color.html#tymethod.from_hex\" class=\"fn\">from_hex</a>(hex: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class=\"docblock\"><p>Create new Color from Hex String</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>facade = Color::from_hex(<span class=\"string\">\"#facade\"</span>);\n<span class=\"macro\">assert_eq!</span>(facade.to_rgb255(), (<span class=\"number\">250</span>, <span class=\"number\">202</span>, <span class=\"number\">222</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_hex\" class=\"method\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#174-177\">source</a><h4 class=\"code-header\">pub fn <a href=\"tint/struct.Color.html#tymethod.to_hex\" class=\"fn\">to_hex</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class=\"docblock\"><p>Convert Color into Hex String</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>coffee = Color::from_rgb255(<span class=\"number\">192</span>, <span class=\"number\">255</span>, <span class=\"number\">238</span>);\n<span class=\"macro\">assert_eq!</span>(coffee.to_hex(), <span class=\"string\">\"#c0ffee\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#201-206\">source</a><h4 class=\"code-header\">pub fn <a href=\"tint/struct.Color.html#tymethod.name\" class=\"fn\">name</a>(name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get Color from exiting named colors\nColors are defined from w3c Basic and Extended colors\nand colors from the XKCD database if loaded</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>chartreuse = Color::name(<span class=\"string\">\"chartreuse\"</span>);\n<span class=\"macro\">assert_eq!</span>(chartreuse, <span class=\"prelude-val\">Some</span>(Color::from_hex(<span class=\"string\">\"7fff00\"</span>)));\n<span class=\"kw\">let </span>olive_drab = Color::name(<span class=\"string\">\"olivedrab\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(olive_drab.to_rgb255(), (<span class=\"number\">107</span>,<span class=\"number\">142</span>,<span class=\"number\">35</span>));\n\ntint::xkcd();\n<span class=\"kw\">let </span>butterscotch = Color::name(<span class=\"string\">\"butterscotch\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(butterscotch.to_hex(), <span class=\"string\">\"#fdb147\"</span>);\n\n<span class=\"kw\">let </span>avocado = Color::name(<span class=\"string\">\"avocado green\"</span>).unwrap();\n<span class=\"macro\">assert_eq!</span>(avocado.to_rgb255(), (<span class=\"number\">135</span>, <span class=\"number\">169</span>, <span class=\"number\">34</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_hsv\" class=\"method\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#210-212\">source</a><h4 class=\"code-header\">pub fn <a href=\"tint/struct.Color.html#tymethod.to_hsv\" class=\"fn\">to_hsv</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class=\"docblock\"><p>Convert Color to HSV</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_hsv\" class=\"method\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#215-218\">source</a><h4 class=\"code-header\">pub fn <a href=\"tint/struct.Color.html#tymethod.from_hsv\" class=\"fn\">from_hsv</a>(&amp;self) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class=\"docblock\"><p>Create new Color from HSV\nalpha value set to 1.0</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_hsl\" class=\"method\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#221-223\">source</a><h4 class=\"code-header\">pub fn <a href=\"tint/struct.Color.html#tymethod.to_hsl\" class=\"fn\">to_hsl</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class=\"docblock\"><p>Convert Color to HSL</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_hsl\" class=\"method\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#226-229\">source</a><h4 class=\"code-header\">pub fn <a href=\"tint/struct.Color.html#tymethod.from_hsl\" class=\"fn\">from_hsl</a>(&amp;self) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class=\"docblock\"><p>Create new Color from HSL\nalpha value set to 1.0</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_yiq\" class=\"method\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#232-234\">source</a><h4 class=\"code-header\">pub fn <a href=\"tint/struct.Color.html#tymethod.to_yiq\" class=\"fn\">to_yiq</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class=\"docblock\"><p>Convert Color to YIQ</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_yiq\" class=\"method\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#237-240\">source</a><h4 class=\"code-header\">pub fn <a href=\"tint/struct.Color.html#tymethod.from_yiq\" class=\"fn\">from_yiq</a>(&amp;self) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class=\"docblock\"><p>Create new Color from YIQ\nalpha value set to 1.0</p>\n</div></details></div></details>",0,"tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#54\">source</a><a href=\"#impl-Debug-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#54\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#386-390\">source</a><a href=\"#impl-Display-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#387-389\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bf32;+3%5D%3E-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#313-317\">source</a><a href=\"#impl-From%3C%26%5Bf32;+3%5D%3E-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">3</a>]&gt; for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"docblock\"><p>Convert from a f32 triple, red, green, blue</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#314-316\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">3</a>]) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a [f32; 3]>","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bf64;+3%5D%3E-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#307-311\">source</a><a href=\"#impl-From%3C%26%5Bf64;+3%5D%3E-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">3</a>]&gt; for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"docblock\"><p>Convert from a f64 triple, red, green, blue</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#308-310\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">3</a>]) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a [f64; 3]>","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8;+3%5D%3E-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#301-305\">source</a><a href=\"#impl-From%3C%26%5Bu8;+3%5D%3E-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">3</a>]&gt; for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"docblock\"><p>Convert from a u8 triple, red, green, blue</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#302-304\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">3</a>]) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a [u8; 3]>","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26String%3E-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#259-266\">source</a><a href=\"#impl-From%3C%26String%3E-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"docblock\"><p>Convert from named color or a hex string</p>\n<p>This may fail</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#260-265\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(s: &amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a String>","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Vec%3Cf32%3E%3E-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#353-358\">source</a><a href=\"#impl-From%3C%26Vec%3Cf32%3E%3E-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>&gt;&gt; for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"docblock\"><p>Convert from a f32 Vec, red, green, blue, maybe alpha</p>\n<p>This may fail</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#354-357\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: &amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>&gt;) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a Vec<f32>>","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Vec%3Cf64%3E%3E-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#341-349\">source</a><a href=\"#impl-From%3C%26Vec%3Cf64%3E%3E-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>&gt;&gt; for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"docblock\"><p>Convert from a f64 Vec, red, green, blue, maybe alpha</p>\n<p>This may fail</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#342-348\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: &amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>&gt;) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a Vec<f64>>","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26str%3E-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#270-277\">source</a><a href=\"#impl-From%3C%26str%3E-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"docblock\"><p>Convert from named color or a hex string</p>\n<p>This may fail</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#271-276\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(s: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a str>","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bf32;+3%5D%3E-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#331-335\">source</a><a href=\"#impl-From%3C%5Bf32;+3%5D%3E-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">3</a>]&gt; for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"docblock\"><p>Convert from a f32 triple, red, green, blue</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#332-334\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">3</a>]) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[f32; 3]>","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bf64;+3%5D%3E-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#325-329\">source</a><a href=\"#impl-From%3C%5Bf64;+3%5D%3E-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">3</a>]&gt; for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"docblock\"><p>Convert from a f64 triple, red, green, blue</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#326-328\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">3</a>]) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[f64; 3]>","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+3%5D%3E-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#319-323\">source</a><a href=\"#impl-From%3C%5Bu8;+3%5D%3E-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">3</a>]&gt; for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"docblock\"><p>Convert from a u8 triple, red, green, blue</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#320-322\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">3</a>]) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[u8; 3]>","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(f32,+f32,+f32)%3E-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#293-297\">source</a><a href=\"#impl-From%3C(f32,+f32,+f32)%3E-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>)&gt; for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"docblock\"><p>Convert from a f32 triple, red, green, blue</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#294-296\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>)) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(f32, f32, f32)>","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(f64,+f64,+f64)%3E-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#287-291\">source</a><a href=\"#impl-From%3C(f64,+f64,+f64)%3E-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>)&gt; for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"docblock\"><p>Convert from a f64 triple, red, green, blue</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#288-290\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>)) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(f64, f64, f64)>","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(u8,+u8,+u8)%3E-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#281-285\">source</a><a href=\"#impl-From%3C(u8,+u8,+u8)%3E-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>)&gt; for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"docblock\"><p>Convert from a u8 triple, red, green, blue</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#282-284\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>)) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(u8, u8, u8)>","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CString%3E-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#248-255\">source</a><a href=\"#impl-From%3CString%3E-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"docblock\"><p>Convert from named color or a hex string</p>\n<p>This may fail</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#249-254\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(s: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<String>","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVec%3Cf32%3E%3E-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#370-375\">source</a><a href=\"#impl-From%3CVec%3Cf32%3E%3E-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>&gt;&gt; for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"docblock\"><p>Convert from a f32 Vec, red, green, blue, maybe alpha</p>\n<p>This may fail</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#371-374\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>&gt;) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Vec<f32>>","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVec%3Cf64%3E%3E-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#362-366\">source</a><a href=\"#impl-From%3CVec%3Cf64%3E%3E-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>&gt;&gt; for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"docblock\"><p>Convert from a f32 Vec, red, green, blue, maybe alpha</p>\n<p>This may fail</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#363-365\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>&gt;) -&gt; <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Vec<f64>>","tint::Colour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#377-384\">source</a><a href=\"#impl-PartialEq-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#378-383\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","tint::Colour"],["<section id=\"impl-Copy-for-Color\" class=\"impl\"><a class=\"src rightside\" href=\"src/tint/lib.rs.html#54\">source</a><a href=\"#impl-Copy-for-Color\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"tint/struct.Color.html\" title=\"struct tint::Color\">Color</a></h3></section>","Copy","tint::Colour"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()