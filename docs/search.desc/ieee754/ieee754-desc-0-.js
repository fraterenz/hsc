searchState.loadedDescShard("ieee754", 0, "Low-level manipulations of IEEE754 floating-point numbers.\nA type that represents the raw bits of <code>Self</code>.\nA type large enough to store the true exponent of <code>Self</code>.\nTypes that are IEEE754 floating point numbers.\nAn iterator over floating point numbers, created by …\nA type large enough to store the raw exponent (i.e. with …\nA type large enough to store the significand of <code>Self</code>.\nReturn the absolute value of <code>x</code>.\nView <code>self</code> as a collection of bits.\nReturn a float with the magnitude of <code>self</code> but the sign of …\nBreak <code>self</code> into the three constituent parts of an IEEE754 …\nBreak <code>self</code> into the three constituent parts of an IEEE754 …\nGet the bias of the stored exponent.\nReturns the argument unchanged.\nView a collections of bits as a floating point number.\nCalls <code>U::from(self)</code>.\nReturn the next value after <code>self</code>.\nReturn the previous value before <code>self</code>.\nCreate a <code>Self</code> out of the three constituent parts of an …\nCreate a <code>Self</code> out of the three constituent parts of an …\nCompute the (generalized) <strong>signed</strong> relative error of <code>self</code> as …\nReturn the sign of <code>x</code>.\nCompare <code>x</code> and <code>y</code> using the IEEE-754 <code>totalOrder</code> predicate …\nReturn the unit-in-the-last-place ulp of <code>self</code>. That is, …\nIterate over each value of <code>Self</code> in <code>[self, lim]</code>.")