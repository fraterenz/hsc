searchState.loadedDescShard("hsc", 0, "Simulate the dynamics of a stem cell population undergoing …\nMaximal number of fit clones that can arise during the …\nProbabilities used in the simulations.\nThe time at birth measured in years used for background …\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe neutral mutations representing the genotype of the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nArrival rate of fit mutants per year\nArrival rate of neutral background mutations per year\nArrival rate of neutral “divisional” mutations per year\nPanics\nThe events to simulate for this Markov process.\nThe proliferation of cells with the simulation of neutral …\nThe agents whose state defines the system simulated by the …\nThe classes defining the proliferative advantage.\nWrite vector of float into new file with a precision of 6 …\nProbability of asymmetric division per cell per division\nProbabilities per year\nProbabilities per year\nArrival rate of fit mutants per cell per division\nArrival rate of fit mutants per cell per division\nSingle-cell mutational burden is a mapping of cells …\nThe Poisson probability distribution modeling the …\nSite frequency spectrum implemented as mapping with keys …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCompute the SFS from the stem cell population.\nCompute the single-cell mutational burden from the stem …\nCreate the single-cell mutational burden from all cells in …\nCreate the single-cell mutational burden from all cells in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate two Poisson distributions, one modelling the neutral\nThe number of neutral mutations acquired upon cell …\nGenerate neutral mutations acquired upon cell division …\nExponential growing process\nThe Moran process saves the state of the agents and …\nUpdate the process by simulating the next proliferative …\nUpdate the process by simulating the next proliferative …\nThe number of cells to subsample\nThe counter for the number of proliferative events.\nThe counter for the number of proliferative events.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRate of neutral mutations per cell-division\nA Moran process with wild-type subclone with neutral …\nProbability of getting a fit mutant upon cell division\nA collection of clones having a proliferative advantage.\nA collection of clones having a proliferative advantage.\nEnd the exponential growing phase and switch to a …\nThe time at which we subsample\nA stem cell proliferates and gives rise to a differentiate …\nStem cells can either self-renew by symmetric division or …\nSpecifies the kind of neutral mutations to simulate.\nAll the updates and changes in the system upon …\nA stem cell proliferates and gives to a new stem cell with …\nNeutral mutations upon division due to errors in the DNA …\nNeutral mutations upon division and background mutations …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSample a random cell from the subclones with id …\nHematopoietic stem and progenitor cells (HSPCs) are a rare …\nAssign background mutations to all cells in the system …\nCreates a stem cell without any neutral mutations.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConstruct a new cell without any neutral mutations.\nId of the <code>SubClone</code>s.\nDistribution probabilities for the simulations upon cell …\nFitness models implemented so far.\nAccording to the <code>Fixed</code> fitness model, the birth-rates for …\nAccording to the <code>GammaSampled</code> fitness model, the …\nAccording to the <code>Neutral</code> fitness model, all subclones have …\nA group of cells sharing the same genetic background with …\nA collection of subclones each having their proliferative …\nNumber of cells in subclones.\nCreate new subclones each having one cell (this creates …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate the Gillespie reaction rates according to the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nneutral mutations\nReturns all the newly initiated subclones by assigning all …\nReturns a <code>CloneId</code> to which the stem cell must be assigned …\nDetermine which cells will proliferate by randomly …\nreturns <code>None</code> if more than one subclone is present else the …\narrival rate of fit mutations per division per cell\nThe total variant count is the number of cells in all …\nThe proportion of cells in all subclones.")